/*
 * This file is generated by jOOQ.
 */
package org.jooq.schema.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.schema.tables.Projects;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectsRecord extends UpdatableRecordImpl<ProjectsRecord> implements Record5<String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.projects.project_id</code>.
     */
    public void setProjectId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.projects.project_id</code>.
     */
    public String getProjectId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.projects.content_name</code>.
     */
    public void setContentName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.projects.content_name</code>.
     */
    public String getContentName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.projects.lang</code>.
     */
    public void setLang(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.projects.lang</code>.
     */
    public String getLang() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.projects.user_id</code>.
     */
    public void setUserId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.projects.user_id</code>.
     */
    public String getUserId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.projects.timestamp</code>.
     */
    public void setTimestamp(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.projects.timestamp</code>.
     */
    public String getTimestamp() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Projects.PROJECTS.PROJECT_ID;
    }

    @Override
    public Field<String> field2() {
        return Projects.PROJECTS.CONTENT_NAME;
    }

    @Override
    public Field<String> field3() {
        return Projects.PROJECTS.LANG;
    }

    @Override
    public Field<String> field4() {
        return Projects.PROJECTS.USER_ID;
    }

    @Override
    public Field<String> field5() {
        return Projects.PROJECTS.TIMESTAMP;
    }

    @Override
    public String component1() {
        return getProjectId();
    }

    @Override
    public String component2() {
        return getContentName();
    }

    @Override
    public String component3() {
        return getLang();
    }

    @Override
    public String component4() {
        return getUserId();
    }

    @Override
    public String component5() {
        return getTimestamp();
    }

    @Override
    public String value1() {
        return getProjectId();
    }

    @Override
    public String value2() {
        return getContentName();
    }

    @Override
    public String value3() {
        return getLang();
    }

    @Override
    public String value4() {
        return getUserId();
    }

    @Override
    public String value5() {
        return getTimestamp();
    }

    @Override
    public ProjectsRecord value1(String value) {
        setProjectId(value);
        return this;
    }

    @Override
    public ProjectsRecord value2(String value) {
        setContentName(value);
        return this;
    }

    @Override
    public ProjectsRecord value3(String value) {
        setLang(value);
        return this;
    }

    @Override
    public ProjectsRecord value4(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public ProjectsRecord value5(String value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public ProjectsRecord values(String value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectsRecord
     */
    public ProjectsRecord() {
        super(Projects.PROJECTS);
    }

    /**
     * Create a detached, initialised ProjectsRecord
     */
    public ProjectsRecord(String projectId, String contentName, String lang, String userId, String timestamp) {
        super(Projects.PROJECTS);

        setProjectId(projectId);
        setContentName(contentName);
        setLang(lang);
        setUserId(userId);
        setTimestamp(timestamp);
    }
}
